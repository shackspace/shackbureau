# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-02-11 16:05
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import localflavor.generic.models
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# usermanagement.migrations.0045_auto_20160208_1104
# usermanagement.migrations.0046_auto_20160208_2133
# usermanagement.migrations.0049_auto_20160209_1308

class Migration(migrations.Migration):

    replaces = [('usermanagement', '0001_initial'), ('usermanagement', '0002_auto_20150718_1322'), ('usermanagement', '0003_auto_20150718_1348'), ('usermanagement', '0004_auto_20150718_1410'), ('usermanagement', '0005_auto_20150718_1746'), ('usermanagement', '0006_auto_20150718_1758'), ('usermanagement', '0007_auto_20150719_1131'), ('usermanagement', '0008_accounttransaction'), ('usermanagement', '0009_auto_20150719_1443'), ('usermanagement', '0010_auto_20150719_1502'), ('usermanagement', '0011_member_comment'), ('usermanagement', '0012_auto_20150729_2038'), ('usermanagement', '0013_auto_20150729_2044'), ('usermanagement', '0014_auto_20150801_1823'), ('usermanagement', '0015_auto_20150801_2016'), ('usermanagement', '0016_accounttransaction_transaction_hash'), ('usermanagement', '0017_auto_20150801_2033'), ('usermanagement', '0018_banktransactionlog_transaction_owner'), ('usermanagement', '0019_auto_20150801_2150'), ('usermanagement', '0020_banktransactionlog_amount'), ('usermanagement', '0021_auto_20150801_2204'), ('usermanagement', '0022_accounttransaction_send_nagging_mail'), ('usermanagement', '0023_memberspecials'), ('usermanagement', '0024_auto_20150802_1553'), ('usermanagement', '0025_auto_20150802_1556'), ('usermanagement', '0026_memberspecials_has_selgros_card'), ('usermanagement', '0027_member_is_cancellation_mail_sent_to_cashmaster'), ('usermanagement', '0028_member_iban_issue_date'), ('usermanagement', '0029_auto_20150825_1732'), ('usermanagement', '0030_membertrackingcode'), ('usermanagement', '0031_auto_20151219_2129'), ('usermanagement', '0032_banktransactionupload_data_type'), ('usermanagement', '0033_auto_20160124_1654'), ('usermanagement', '0034_auto_20160124_1840'), ('usermanagement', '0035_member_is_revoke_memberspecials_mail_sent'), ('usermanagement', '0036_auto_20160130_0502'), ('usermanagement', '0037_auto_20160131_2015'), ('usermanagement', '0038_memberdocument'), ('usermanagement', '0039_memberdocumenttag'), ('usermanagement', '0040_auto_20160202_2349'), ('usermanagement', '0041_auto_20160202_2357'), ('usermanagement', '0042_auto_20160203_0032'), ('usermanagement', '0043_auto_20160207_2023'), ('usermanagement', '0044_auto_20160208_1103'), ('usermanagement', '0045_auto_20160208_1104'), ('usermanagement', '0046_auto_20160208_2133'), ('usermanagement', '0047_auto_20160208_2321'), ('usermanagement', '0048_memberspecials_is_registration_to_key_mailinglist_sent'), ('usermanagement', '0049_auto_20160209_1308'), ('usermanagement', '0050_auto_20160215_0105'), ('usermanagement', '0051_auto_20160215_0147'), ('usermanagement', '0052_auto_20160305_1604'), ('usermanagement', '0053_banktransactionlog_debitor'), ('usermanagement', '0054_auto_20160307_1859'), ('usermanagement', '0055_balance_accumulated_balance'), ('usermanagement', '0056_memberlog'), ('usermanagement', '0057_auto_20160410_1850'), ('usermanagement', '0058_auto_20160410_1851'), ('usermanagement', '0059_memberlog_data'), ('usermanagement', '0060_auto_20161020_1931')]

    initial = True

    dependencies = [
        ('districtcourt', '0005_debitor_record_token_line_2'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(help_text='Membership ID', unique=True)),
                ('name', models.CharField(help_text='First/Given Name', max_length=255)),
                ('surname', models.CharField(help_text='Last/Family Name', max_length=255)),
                ('nickname', models.CharField(blank=True, help_text='Nickname', max_length=255, null=True)),
                ('form_of_address', models.CharField(choices=[('F', 'Frau'), ('H', 'Herr')], help_text='How to formally address this person', max_length=10)),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of Birth', null=True)),
                ('address1', models.CharField(help_text='Address line 1 (e.g. Street / House Number)', max_length=255)),
                ('address2', models.CharField(blank=True, help_text='Address line 2 (optional)', max_length=255, null=True)),
                ('zip_code', models.CharField(help_text='ZIP Code', max_length=20)),
                ('city', models.CharField(help_text='City', max_length=255)),
                ('country', models.CharField(default='Deutschland', help_text='Country', max_length=255)),
                ('email', models.EmailField(help_text='E-mail address', max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True)),
                ('join_date', models.DateField(help_text='Member joined on this date')),
                ('leave_date', models.DateField(blank=True, help_text='Member left on this date', null=True)),
                ('mailing_list_initial_mitglieder', models.BooleanField(default=True, help_text='Member should be subscribed on the Mitglieder mailing list')),
                ('mailing_list_initial_mitglieder_announce', models.BooleanField(default=True, help_text='Member should be subscribed on the Mitglieder-announce mailing list')),
                ('membership_type', models.CharField(choices=[('full', 'Vollzahler'), ('reduced', 'ermässigt')], default='full', max_length=20)),
                ('membership_fee_monthly', models.DecimalField(decimal_places=2, default=20, help_text='Monthly Membership Fee', max_digits=8)),
                ('membership_fee_interval', models.PositiveIntegerField(choices=[(1, '1'), (12, '12')], default=1, help_text='Pays for N months at once')),
                ('is_active', models.BooleanField(default=True, help_text='Membership is active')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to=settings.AUTH_USER_MODEL)),
                ('bic', localflavor.generic.models.BICField(blank=True, max_length=11, null=True, verbose_name='BIC')),
                ('iban', localflavor.generic.models.IBANField(blank=True, include_countries=None, max_length=34, null=True, use_nordea_extensions=False, verbose_name='IBAN')),
                ('iban_address', models.CharField(blank=True, help_text='Address line (e.g. Street / House Number)', max_length=255, null=True, verbose_name='IBAN address')),
                ('iban_city', models.CharField(blank=True, help_text='City', max_length=255, null=True, verbose_name='IBAN City')),
                ('iban_country', models.CharField(blank=True, default='Deutschland', help_text='Country', max_length=255, null=True, verbose_name='IBAN Country')),
                ('iban_fullname', models.CharField(blank=True, help_text='Full name for IBAN account owner', max_length=255, null=True, verbose_name='IBAN full name')),
                ('iban_zip_code', models.CharField(blank=True, help_text='ZIP Code', max_length=20, null=True, verbose_name='IBAN zip code')),
                ('is_underaged', models.BooleanField(default=False, help_text='Member is not 18+.')),
                ('payment_type', models.CharField(choices=[('SEPA', 'Lastschrift'), ('transfer', 'Überweisung')], default='SEPA', max_length=20)),
            ],
        ),
        migrations.AlterModelOptions(
            name='member',
            options={'ordering': ('-created',)},
        ),
        migrations.AddField(
            model_name='member',
            name='is_cancellation_confirmed',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='member',
            name='form_of_address',
            field=models.CharField(choices=[('F', 'Frau'), ('H', 'Herr')], default='H', help_text='How to formally address this person', max_length=10),
        ),
        migrations.AlterField(
            model_name='member',
            name='city',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='member',
            name='country',
            field=models.CharField(default='Deutschland', max_length=255),
        ),
        migrations.AlterField(
            model_name='member',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='member',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='member',
            name='email',
            field=models.EmailField(max_length=255),
        ),
        migrations.AlterField(
            model_name='member',
            name='iban_city',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='IBAN City'),
        ),
        migrations.AlterField(
            model_name='member',
            name='iban_country',
            field=models.CharField(blank=True, default='Deutschland', max_length=255, null=True, verbose_name='IBAN Country'),
        ),
        migrations.AlterField(
            model_name='member',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='member',
            name='membership_fee_monthly',
            field=models.DecimalField(decimal_places=2, default=20, max_digits=8),
        ),
        migrations.AlterField(
            model_name='member',
            name='nickname',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='member',
            name='is_payment_instruction_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='member',
            name='is_registration_to_mailinglists_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='member',
            name='is_welcome_mail_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='AccountTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('booking_date', models.DateField(default=datetime.date.today)),
                ('transaction_type', models.CharField(choices=[('membership fee', 'Mitgliedsbeitrag'), ('donation', 'Spende')], max_length=255)),
                ('booking_type', models.CharField(choices=[('claim', 'Forderung'), ('fee_claim', 'Forderung (automatischer Mitgliedsbeitrag)'), ('deposit', 'Einzahlung'), ('credit', 'Gutschrift')], max_length=255)),
                ('payment_reference', models.TextField()),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
                ('transaction_hash', models.TextField(blank=True, null=True)),
                ('send_nagging_mail', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField()),
                ('membership_type', models.CharField(choices=[('full', 'Vollzahler'), ('reduced', 'ermässigt')], default='full', max_length=20)),
                ('membership_fee_monthly', models.DecimalField(decimal_places=2, default=20, max_digits=8)),
                ('membership_fee_interval', models.PositiveIntegerField(choices=[(1, '1'), (12, '12')], default=1, help_text='Pays for N months at once')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='member',
            name='membership_fee_interval',
        ),
        migrations.RemoveField(
            model_name='member',
            name='membership_fee_monthly',
        ),
        migrations.RemoveField(
            model_name='member',
            name='membership_type',
        ),
        migrations.AddField(
            model_name='membership',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member'),
        ),
        migrations.AlterModelOptions(
            name='membership',
            options={'ordering': ('-valid_from',)},
        ),
        migrations.AddField(
            model_name='member',
            name='comment',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='member',
            name='join_date',
            field=models.DateField(help_text='Member joined on this date. The date is forced to the begin of given month.'),
        ),
        migrations.CreateModel(
            name='BankTransactionUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file', models.FileField(upload_to='bank_transaction_uploads')),
                ('status', models.CharField(choices=[('new', 'New'), ('wip', 'Work in progress'), ('done', 'Imported'), ('fail', 'Could not import')], default='new', max_length=10)),
                ('created', models.DateTimeField(auto_now_add=True, default=datetime.datetime(2017, 2, 11, 16, 4, 52, 615492, tzinfo=utc))),
            ],
        ),
        migrations.CreateModel(
            name='BankTransactionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.TextField()),
                ('needs_manual_interaction', models.BooleanField(default=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
            ],
        ),
        migrations.AddField(
            model_name='banktransactionupload',
            name='created_by',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='banktransactionupload',
            name='modified',
            field=models.DateTimeField(auto_now=True, default=datetime.datetime(2017, 2, 11, 16, 4, 52, 615562, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='upload',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.BankTransactionUpload'),
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='error',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='score',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='transaction_owner',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RenameField(
            model_name='banktransactionlog',
            old_name='needs_manual_interaction',
            new_name='is_matched',
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='amount',
            field=models.DecimalField(decimal_places=2, default=1, max_digits=8),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='booking_date',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='is_resolved',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='MemberSpecials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_matomat_key', models.BooleanField(default=False)),
                ('has_snackomat_key', models.BooleanField(default=False)),
                ('has_metro_card', models.BooleanField(default=False)),
                ('has_shack_iron_key', models.BooleanField(default=False)),
                ('is_keyholder', models.BooleanField(default=False)),
                ('ssh_public_key', models.TextField(default='')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
                ('created', models.DateTimeField(auto_now_add=True, default=datetime.datetime(2017, 2, 11, 16, 4, 52, 607885, tzinfo=utc))),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified', models.DateTimeField(auto_now=True, default=datetime.datetime(2017, 2, 11, 16, 4, 52, 607973, tzinfo=utc))),
            ],
        ),
        migrations.AlterModelOptions(
            name='memberspecials',
            options={'verbose_name': 'Member Specials', 'verbose_name_plural': 'Member Specials'},
        ),
        migrations.AlterField(
            model_name='memberspecials',
            name='ssh_public_key',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='has_selgros_card',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='member',
            name='is_cancellation_mail_sent_to_cashmaster',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='member',
            name='iban_issue_date',
            field=models.DateField(blank=True, help_text='The issue date of the direct debit mandate', null=True, verbose_name='IBAN Issue Date'),
        ),
        migrations.CreateModel(
            name='MemberTrackingCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('validated', models.BooleanField(default=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
            ],
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='has_loeffelhardt_account',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='has_safe_key',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='signed_DSV',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='banktransactionupload',
            name='data_type',
            field=models.CharField(choices=[('bank_csv', 'Bank [CSV]'), ('accountant_csv', 'Accountant [CSV]')], default='bank_csv', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='membership',
            name='valid_from',
            field=models.DateField(help_text='Membership starts on this date. The date is forced to the begin of given month.'),
        ),
        migrations.AddField(
            model_name='membership',
            name='is_payment_instruction_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterUniqueTogether(
            name='membership',
            unique_together=set([('member', 'valid_from')]),
        ),
        migrations.AddField(
            model_name='member',
            name='is_revoke_memberspecials_mail_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='memberspecials',
            name='member',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member'),
        ),
        migrations.AddField(
            model_name='member',
            name='iban_institute',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='IBAN Institute'),
        ),
        migrations.AlterField(
            model_name='memberspecials',
            name='ssh_public_key',
            field=models.TextField(blank=True, help_text='The format ist forced into one line, with single whitespaces as seperators', null=True),
        ),
        migrations.CreateModel(
            name='MemberDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('data_file', models.FileField(upload_to='member_documents')),
                ('comment', models.TextField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
            ],
        ),
        migrations.CreateModel(
            name='MemberDocumentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, default=None)),
                ('created_by', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified', models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 2, 2, 23, 57, 42, 254353, tzinfo=utc))),
            ],
        ),
        migrations.AddField(
            model_name='memberdocument',
            name='tag',
            field=models.ManyToManyField(blank=True, to='usermanagement.MemberDocumentTag'),
        ),
        migrations.AlterField(
            model_name='member',
            name='leave_date',
            field=models.DateField(blank=True, help_text='Member left on this date. The date is forced to the end of given month', null=True),
        ),
        migrations.RemoveField(
            model_name='member',
            name='is_payment_instruction_sent',
        ),
#        migrations.RunPython(
#            code=usermanagement.migrations.0045_auto_20160208_1104.set_is_payment_instruction_sent,
#        ),
#        migrations.RunPython(
#            code=usermanagement.migrations.0046_auto_20160208_2133.set_iban_issue_date,
#        ),
        migrations.AlterField(
            model_name='member',
            name='iban_issue_date',
            field=models.DateField(blank=True, help_text='The issue date of the direct debit mandate. (1970-01-01 means there is no issue date in the database )', null=True, verbose_name='IBAN Issue Date'),
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='is_registration_to_key_mailinglist_sent',
            field=models.BooleanField(default=False),
        ),
#        migrations.RunPython(
#            code=usermanagement.migrations.0049_auto_20160209_1308.set_memberspecials_is_registration_to_key_mailinglist_sent,
#        ),
        migrations.AlterField(
            model_name='accounttransaction',
            name='booking_type',
            field=models.CharField(choices=[('claim', 'Forderung'), ('fee_claim', 'Forderung (automatischer Mitgliedsbeitrag)'), ('deposit', 'Einzahlung'), ('credit', 'Gutschrift'), ('charge back', 'Rücklastschrift')], max_length=255),
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=8)),
                ('year', models.PositiveIntegerField()),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
                ('accumulated_balance', models.DecimalField(decimal_places=2, default='0.0', max_digits=8)),
            ],
            options={
                'ordering': ('-year', 'member'),
            },
        ),
        migrations.AlterUniqueTogether(
            name='balance',
            unique_together=set([('year', 'member')]),
        ),
        migrations.AlterModelOptions(
            name='accounttransaction',
            options={'ordering': ('-due_date',)},
        ),
        migrations.AddField(
            model_name='banktransactionlog',
            name='debitor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='districtcourt.Debitor', verbose_name='Districtcourt debitor'),
        ),
        migrations.CreateModel(
            name='Memberlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=255)),
                ('detail', models.TextField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Member')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='has_laser_key',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='memberspecials',
            name='laserkey_deposit',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
    ]
